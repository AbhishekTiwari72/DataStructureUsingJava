package com.QueueTest;
import java.util.Stack;
public class QueueUsingStack<T> {

	private Stack<T> s1, s2;
	
	//constructor
	QueueUsingStack()
	{
		s1= new Stack<>();
		s2= new Stack<>();
	}
	
	public void enqueue(T data)
	{
		while(!s1.isEmpty())
			{
			s2.push(s1.pop());
			}
		//Push items into first Stack.
		s1.push(data);
		
		while(!s2.isEmpty())
			{
			s1.push(s2.pop());
			}
		}
	
	//Dequeue an item from queue.
	public T dequeue()
	{
		if(s1.isEmpty())
		{
			System.out.println("Underflow!");
			System.exit(0);
		}
		return s1.pop();
	}
	public static void main(String[] args) {
		
		int[]  keys= {1,2,3,4,5};
		QueueUsingStack qS=new QueueUsingStack();
 
		for(int key : keys)
		{
			qS.enqueue(key);
		}
		 System.out.println(qS.dequeue());    // print 1
	        System.out.println(qS.dequeue()); 
	}

}
